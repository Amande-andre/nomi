name: Release

on:
  push:
    tags:
      - "*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Install Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          # gcc
          sudo apt install -y gcc libc6-dev
          # x11
          sudo apt install -y libx11-dev xorg-dev libxtst-dev
          # Clipboard
          sudo apt install -y xsel xclip
          # Bitmap
          sudo apt install -y libpng++-dev
          # GoHook
          sudo apt install -y xcb libxcb-xkb-dev x11-xkb-utils libx11-xcb-dev libxkbcommon-x11-dev libxkbcommon-dev
          # portaudio
          sudo apt-get install -y portaudio19-dev
          go mod download

      - name: Install Dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install portaudio
          go mod download

      - name: Install Dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install portaudio
          go mod download

      - name: Build Binary
        env:
          CGO_ENABLED: 1
        run: |
          go build -o nomi-cli ./cmd/cli -ldflags "-X main.buildDate=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -X main.buildVersion=${GITHUB_REF#refs/tags/}"

      - name: Archive Binary (Windows)
        if: runner.os == 'Windows'
        run: |
          powershell -Command "Compress-Archive -Path nomi-cli.exe -DestinationPath nomi-cli-windows.zip"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nomi-cli-${{ runner.os }}
          path: nomi-cli-*.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
